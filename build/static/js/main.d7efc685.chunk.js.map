{"version":3,"sources":["routes/StudentList.js","components/Navbar.js","components/Layout.js","components/Footer.js","components/AlertTag.js","hooks/useAlert.js","routes/StudentForm.js","routes/Student.js","App.js","reportWebVitals.js","index.js"],"names":["StudentList","props","useState","students","setStudents","isLoaded","setIsLoaded","useEffect","fetchStudents","fetch","process","method","headers","then","response","json","result","style","flex","map","student","className","hoverable","to","id","name","Navbar","borderBottom","width","position","top","left","background","display","alignItems","justifyContent","padding","maxHeight","margin","Layout","paddingTop","flexDirection","flexGrow","height","children","Footer","footer","color","alertContainer","document","querySelector","AlertTag","message","type","isOpened","ReactDOM","createPortal","onClick","e","target","parentElement","AlertContext","createContext","AlertProvider","setMessage","setType","setIsOpenned","autoClose","setAutoClose","setPosition","alertTimer","setTimeout","clearTimeout","Provider","value","sendAlert","useAlert","context","useContext","undefined","Error","StudentForm","idInput","setIdInput","nameInput","setNameInput","isLoading","setIsLoading","navigate","useNavigate","insertStudent","a","body","JSON","stringify","data","insert_students_one","catch","error","console","log","onSubmit","event","preventDefault","required","placeholder","onChange","disabled","Student","setStudent","params","useParams","StudentId","students_by_pk","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","getElementById"],"mappings":"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","file":"static/js/main.d7efc685.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction StudentList(props) {\r\n    const [students, setStudents] = useState([])\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        fetchStudents()\r\n    }, [isLoaded])\r\n\r\n    const fetchStudents = () => {\r\n        fetch(`${process.env.REACT_APP_API_URL}students`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\r\n        }\r\n        }).then(response => response.json())\r\n        .then(result => {\r\n            setIsLoaded(true)\r\n            setStudents(result.students)\r\n        })\r\n    }\r\n\r\n    if (!isLoaded) return <p>loading...</p>\r\n    \r\n    return (\r\n        <div style={{flex: \"1 0 auto\"}}>\r\n            <h1>Students List</h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    {\r\n                        students.map(student => \r\n                            <tr className={props.hoverable ? 'hoverable' : ''} key={student.id}>\r\n                                <td><Link to={`/student/${student.id}`}>{student.id}</Link></td>\r\n                                <td>{student.name}</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentList","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    const navbar = {\r\n        borderBottom: \"1px var(--border) solid\", \r\n        width: \"100%\", \r\n        position: \"fixed\",\r\n        top: 0, \r\n        left: 0,\r\n        background: \"var(--background-alt)\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        padding: \"16px\",\r\n        maxHeight: \"40px\"\r\n    }\r\n\r\n    return (\r\n        <div style={navbar}>\r\n            <Link style={{display:\"block\", margin: \"1rem\"}} to='/students'>\r\n                Students List\r\n            </Link>\r\n            <Link style={{display:\"block\", margin: \"1rem 0\"}} to='/addStudent'>\r\n                Add Student \r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\n\r\nfunction Layout(props) {\r\n    return(\r\n        <div style={\r\n            {paddingTop: \"4rem\", \r\n            display:\"flex\", \r\n            flexDirection:\"column\",\r\n            flexGrow: 1, \r\n            height: \"calc(100vh - 5rem)\",\r\n            alignItems: \"stretch\"}\r\n        }>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n    const footer = {\r\n        flex: \"0 0 auto\",\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        background: props.color\r\n    }\r\n\r\n    return (\r\n        <div style={footer}>\r\n            <p>Made with ❤️ and ☕️</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import react from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst alertContainer = document.querySelector(\"#alert-root\")\r\n\r\nconst AlertTag = ({ message, type, isOpened}) => {\r\n    if (!isOpened) return null\r\n    return ReactDOM.createPortal(\r\n            <div className={`alert ${type}`}>\r\n                <div className = \"closeContent\" onClick = {(e) => {e.target.parentElement.style.display = 'none'}}>X</div>\r\n                <span>{message}</span>\r\n            </div>,\r\n        alertContainer\r\n    )\r\n}\r\n\r\nexport default AlertTag","import React from \"react\";\r\nimport { useContext, useState, useEffect, createContext } from \"react\";\r\nimport AlertTag from \"../components/AlertTag\";\r\n\r\nexport const AlertContext = createContext();\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n    const [message, setMessage] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [isOpened, setIsOpenned] = useState(false)\r\n    const [autoClose, setAutoClose] = useState(5000)\r\n    const [position, setPosition] = useState(\"right\")\r\n\r\n    const sendAlert = ({type, message,autoClose, position}) => {\r\n        setMessage(message)\r\n        setType(type)\r\n        setIsOpenned(true)\r\n        setPosition(!position ? 'rigth' : position)\r\n        setAutoClose(!autoClose ? 5000 : autoClose)\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const alertTimer = setTimeout(() => {\r\n            setIsOpenned(false)\r\n        }\r\n            , autoClose)\r\n        return () => clearTimeout(alertTimer)\r\n        \r\n    })\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ sendAlert, type, message, isOpened, position}}>\r\n            { children }\r\n        </AlertContext.Provider>\r\n    )\r\n}\r\n\r\nconst useAlert = () => {\r\n    const context = useContext(AlertContext);\r\n\r\n    if (context === undefined) {\r\n        throw new Error(\r\n            'You must wrap your application with <AlertProvider /> in order to useAlert().',\r\n        ) \r\n    }\r\n    return context;\r\n}\r\n\r\nexport default useAlert;","import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport useAlert from \"../hooks/useAlert\"\r\n\r\nconst StudentForm = () => {\r\n    const [idInput, setIdInput] = useState()\r\n    const [nameInput, setNameInput] = useState('')\r\n    // const [alert, setAlert] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    const { sendAlert } = useAlert()\r\n\r\n    const insertStudent = async (id, name) => {\r\n        setIsLoading(true)\r\n        return fetch(`${process.env.REACT_APP_API_URL}student`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\r\n          },\r\n          body: JSON.stringify({\"id\": id, \"name\": name})\r\n      }).then(response => response.json())\r\n      .then(data => {\r\n        setIsLoading(false)\r\n          if (data.insert_students_one === null)  {\r\n                sendAlert({type: 'warning', message: 'student is repeated'})\r\n            } else {\r\n              sendAlert({type: 'success', message: 'new student added'})\r\n                setIdInput(0)\r\n                setNameInput('')\r\n                navigate('/')\r\n            }\r\n      })\r\n        .catch(error => console.log(error))\r\n      }\r\n    \r\n      const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        insertStudent(idInput, nameInput)\r\n      }\r\n\r\n      // useEffect(() => {\r\n      //   const alertTimer = setTimeout(() => {\r\n      //       setAlert('')\r\n      //   }, 5000)\r\n      //   return () => clearTimeout(alertTimer)\r\n      // }, [alert])\r\n\r\n    return (\r\n        <>\r\n            <h1>Add Student</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input required value={idInput} type=\"number\" name=\"id\" placeholder=\"id\" onChange={e => setIdInput(e.target.value)}></input>\r\n                <input required value={nameInput} type=\"text\" name=\"name\" placeholder=\"name\" onChange={e => setNameInput(e.target.value)}></input>\r\n                <button disabled={isLoading} type=\"submit\" value=\"submit\">{ isLoading ? 'Loading' : 'Add student'}</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentForm","import { useState } from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react/cjs/react.development\"\r\n\r\nconst Student = () => {\r\n    const [student, setStudent] = useState({})\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const params = useParams()\r\n\r\n    const getStudentById = (id) => {\r\n        fetch(`${process.env.REACT_APP_API_URL}student/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-hasura-admin-secret': process.env.REACT_APP_HASURA_SECRET\r\n        }\r\n        }).then(response => response.json())\r\n        .then(result => {\r\n            setIsLoaded(true)\r\n            setStudent(result.students_by_pk)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getStudentById(params.StudentId)\r\n    }, [isLoaded])\r\n    \r\n    if (!isLoaded) return <p>Loading...</p>\r\n\r\n    return (\r\n        <>\r\n            <h1>Student Profile</h1>\r\n            <Link to={`updateStudent/${params.StudentId}`}>Update Student</Link>\r\n            <hr />\r\n            <h2>Name:</h2>\r\n            <span>{student?.name}</span>\r\n            <h3>ID</h3>\r\n            <span>{params.StudentId}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Student","import './App.css';\r\nimport React from 'react';\r\nimport StudentList from './routes/StudentList'\r\nimport Navbar from './components/Navbar';\r\nimport Layout from './components/Layout'\r\nimport Footer from './components/Footer';\r\nimport StudentForm from './routes/StudentForm';\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport Student from './routes/Student';\r\nimport AlertTag from './components/AlertTag';\r\nimport useAlert from './hooks/useAlert';\r\n\r\nfunction App () {\r\n  const { type, message, isOpened } = useAlert()\r\n  return (\r\n    <Layout>\r\n      <Navbar />\r\n      <AlertTag isOpened={isOpened} type={type} message={message} />\r\n      <Routes>\r\n        <Route path='/' element={<StudentList hoverable/>} />\r\n        <Route  path='/students' element={<StudentList hoverable />} />\r\n        <Route  path='/student/:StudentId' element={<Student />} />\r\n        <Route  path='/addStudent' element={<StudentForm />} />\r\n        <Route  path='/updateStudent/:StudentId' element={<StudentForm />} />\r\n      </Routes>\r\n      <Footer/>\r\n    </Layout>\r\n      )}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\r\nimport StudentList from './routes/StudentList'\r\nimport Student from './routes/Student'\r\nimport StudentForm from './routes/StudentForm'\r\nimport { AlertProvider } from './hooks/useAlert';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <AlertProvider>\r\n      <App />\r\n    </AlertProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}